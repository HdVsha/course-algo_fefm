Передача параметра по ссылке.
=============================


Упражнение №3.
==============


Описать функцию better_incrementor() в соответствии с прототипом. Она также должна увеличивать значение переменной x на 1.


.. code-block:: c

  void good_incrementor(int &x);


Проверьте её работоспособность. Не забудьте, что ссылку в теле функции не нужно разыменовывать, а при вызове не требуется
передавать адрес.

Для гарантии неизменности переменной можно использовать квалификатор const.



Const и указатели.
==================


const для указателей — вот где основные сложности!

Нужно быть осторожным в определении места расположения для const, поскольку это повлияет на то, что именно будет 
константой - или сам указатель будет константой, или константой будет то место, на которое указатель указывает.

Например, выражение:

.. code-block:: c

  const int * constant_1; // указатель на константу
  int const * constant_2; // альтернативная запись указателя на константу
  

декларирует указатели с именами constant_1 и constant_2, которые указывают на какое-то постоянное значение типа int. Т. е. 
сам указатель изменять можно, но значение, на которое указывает указатель, изменять нельзя.

А это выражение:


.. code-block:: c

   int * const constant_3; // константный указатель на переменную


декларирует, что constant_3 является постоянным указателем на некоторую переменную int. Т. е. значение указателя будет всегда 
неизменным, а значение переменной, на которую указывает указатель, менять можно.

Внимание, двойной const:


.. code-block:: c

   int const * const constant_4; // константный указатель на константу
   

декларирует, что constant_4 является постоянным указателем, указывающим на постоянный int. 
Просто запомните, что const прикладывается непосредственно к объекту слева от const (кроме случая, 
когда слева от const нет ничего; тогда const прикладывается непосредственно к тому, что справа от него).
